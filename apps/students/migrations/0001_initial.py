# Generated by Django 5.2 on 2025-07-09 10:18

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('institution', models.CharField(blank=True, max_length=255, verbose_name='Учреждение')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль студента',
                'verbose_name_plural': 'Профили студентов',
            },
        ),
        migrations.CreateModel(
            name='StudentCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strengths', models.TextField()),
                ('weaknesses', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Характеристика студента',
                'verbose_name_plural': 'Характеристики студентов',
            },
        ),
        migrations.CreateModel(
            name='PracticeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('mentor_name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', ckeditor.fields.RichTextField()),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Информация о практике',
                'verbose_name_plural': 'Информация о практиках',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Документ студента',
                'verbose_name_plural': 'Документы студентов',
            },
        ),
        migrations.CreateModel(
            name='DiaryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('entry', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diary', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Запись дневника',
                'verbose_name_plural': 'Записи дневника',
                'ordering': ['-date'],
            },
        ),
    ]
